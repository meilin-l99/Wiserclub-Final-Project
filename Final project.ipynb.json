{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import data\n",
    "Data = pd.read_csv(\"/Users/l-meilin/Desktop/wiserclub/data1.csv\", encoding = 'utf-8', sep = ',', error_bad_lines = False)\n",
    "Holiday = pd.read_csv(\"/Users/l-meilin/Desktop/wiserclub/holiday1.csv\", encoding = 'utf-8', sep = ',', error_bad_lines = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Unnamed: 0.1</th>\n",
       "      <th>dt</th>\n",
       "      <th>phone_no</th>\n",
       "      <th>member_id</th>\n",
       "      <th>commodity_code</th>\n",
       "      <th>commodity_name</th>\n",
       "      <th>commodity_origin_money</th>\n",
       "      <th>coupon_id</th>\n",
       "      <th>coupon_money</th>\n",
       "      <th>one_category_name</th>\n",
       "      <th>two_category_name</th>\n",
       "      <th>commodity_income</th>\n",
       "      <th>pay_money</th>\n",
       "      <th>coffeestore_share_money</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2019-01-25</td>\n",
       "      <td>13901387938</td>\n",
       "      <td>14442</td>\n",
       "      <td>SP025</td>\n",
       "      <td>榛果拿铁</td>\n",
       "      <td>27.0</td>\n",
       "      <td>7045.0</td>\n",
       "      <td>19.44</td>\n",
       "      <td>饮品</td>\n",
       "      <td>现磨咖啡</td>\n",
       "      <td>7.56</td>\n",
       "      <td>7.56</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2019-01-27</td>\n",
       "      <td>13901387938</td>\n",
       "      <td>14442</td>\n",
       "      <td>SP209</td>\n",
       "      <td>NFC鲜榨橙汁</td>\n",
       "      <td>24.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>饮品</td>\n",
       "      <td>鲜榨果蔬汁</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2019-01-23</td>\n",
       "      <td>13901387938</td>\n",
       "      <td>14442</td>\n",
       "      <td>SP025</td>\n",
       "      <td>榛果拿铁</td>\n",
       "      <td>27.0</td>\n",
       "      <td>5589.0</td>\n",
       "      <td>22.14</td>\n",
       "      <td>饮品</td>\n",
       "      <td>现磨咖啡</td>\n",
       "      <td>4.86</td>\n",
       "      <td>4.86</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2019-02-01</td>\n",
       "      <td>13901387938</td>\n",
       "      <td>14442</td>\n",
       "      <td>SP025</td>\n",
       "      <td>榛果拿铁</td>\n",
       "      <td>27.0</td>\n",
       "      <td>6604.0</td>\n",
       "      <td>19.44</td>\n",
       "      <td>饮品</td>\n",
       "      <td>现磨咖啡</td>\n",
       "      <td>7.56</td>\n",
       "      <td>7.56</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2019-01-27</td>\n",
       "      <td>13901387938</td>\n",
       "      <td>14442</td>\n",
       "      <td>SP010</td>\n",
       "      <td>巧克力瑞纳冰</td>\n",
       "      <td>27.0</td>\n",
       "      <td>6947.0</td>\n",
       "      <td>14.04</td>\n",
       "      <td>饮品</td>\n",
       "      <td>瑞纳冰</td>\n",
       "      <td>12.96</td>\n",
       "      <td>12.96</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2351850</th>\n",
       "      <td>2351850</td>\n",
       "      <td>9290477</td>\n",
       "      <td>2019-02-14</td>\n",
       "      <td>13622881441</td>\n",
       "      <td>97654670</td>\n",
       "      <td>SP079</td>\n",
       "      <td>意大利烤鸡卷(单卷)</td>\n",
       "      <td>13.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>食品</td>\n",
       "      <td>健康轻食</td>\n",
       "      <td>8.58</td>\n",
       "      <td>8.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2351851</th>\n",
       "      <td>2351851</td>\n",
       "      <td>9290478</td>\n",
       "      <td>2019-02-14</td>\n",
       "      <td>13622881441</td>\n",
       "      <td>97654670</td>\n",
       "      <td>SP008</td>\n",
       "      <td>拿铁</td>\n",
       "      <td>24.0</td>\n",
       "      <td>5676.0</td>\n",
       "      <td>12.00</td>\n",
       "      <td>饮品</td>\n",
       "      <td>现磨咖啡</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2351852</th>\n",
       "      <td>2351852</td>\n",
       "      <td>9290479</td>\n",
       "      <td>2019-02-13</td>\n",
       "      <td>13622881441</td>\n",
       "      <td>97654670</td>\n",
       "      <td>SP016</td>\n",
       "      <td>焦糖玛奇朵</td>\n",
       "      <td>27.0</td>\n",
       "      <td>8592.0</td>\n",
       "      <td>13.50</td>\n",
       "      <td>饮品</td>\n",
       "      <td>现磨咖啡</td>\n",
       "      <td>13.50</td>\n",
       "      <td>13.50</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2351853</th>\n",
       "      <td>2351853</td>\n",
       "      <td>9290480</td>\n",
       "      <td>2019-02-12</td>\n",
       "      <td>13622881441</td>\n",
       "      <td>97654670</td>\n",
       "      <td>SP008</td>\n",
       "      <td>拿铁</td>\n",
       "      <td>24.0</td>\n",
       "      <td>8585.0</td>\n",
       "      <td>12.00</td>\n",
       "      <td>饮品</td>\n",
       "      <td>现磨咖啡</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2351854</th>\n",
       "      <td>2351854</td>\n",
       "      <td>9290481</td>\n",
       "      <td>2019-02-18</td>\n",
       "      <td>13406806959</td>\n",
       "      <td>97692456</td>\n",
       "      <td>SP008</td>\n",
       "      <td>拿铁</td>\n",
       "      <td>24.0</td>\n",
       "      <td>8585.0</td>\n",
       "      <td>12.00</td>\n",
       "      <td>饮品</td>\n",
       "      <td>现磨咖啡</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2351855 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Unnamed: 0  Unnamed: 0.1          dt     phone_no  member_id  \\\n",
       "0                 0             0  2019-01-25  13901387938      14442   \n",
       "1                 1             1  2019-01-27  13901387938      14442   \n",
       "2                 2             2  2019-01-23  13901387938      14442   \n",
       "3                 3             3  2019-02-01  13901387938      14442   \n",
       "4                 4             4  2019-01-27  13901387938      14442   \n",
       "...             ...           ...         ...          ...        ...   \n",
       "2351850     2351850       9290477  2019-02-14  13622881441   97654670   \n",
       "2351851     2351851       9290478  2019-02-14  13622881441   97654670   \n",
       "2351852     2351852       9290479  2019-02-13  13622881441   97654670   \n",
       "2351853     2351853       9290480  2019-02-12  13622881441   97654670   \n",
       "2351854     2351854       9290481  2019-02-18  13406806959   97692456   \n",
       "\n",
       "        commodity_code commodity_name  commodity_origin_money  coupon_id  \\\n",
       "0                SP025           榛果拿铁                    27.0     7045.0   \n",
       "1                SP209        NFC鲜榨橙汁                    24.0        NaN   \n",
       "2                SP025           榛果拿铁                    27.0     5589.0   \n",
       "3                SP025           榛果拿铁                    27.0     6604.0   \n",
       "4                SP010         巧克力瑞纳冰                    27.0     6947.0   \n",
       "...                ...            ...                     ...        ...   \n",
       "2351850          SP079     意大利烤鸡卷(单卷)                    13.0        NaN   \n",
       "2351851          SP008             拿铁                    24.0     5676.0   \n",
       "2351852          SP016          焦糖玛奇朵                    27.0     8592.0   \n",
       "2351853          SP008             拿铁                    24.0     8585.0   \n",
       "2351854          SP008             拿铁                    24.0     8585.0   \n",
       "\n",
       "         coupon_money one_category_name two_category_name  commodity_income  \\\n",
       "0               19.44                饮品              现磨咖啡              7.56   \n",
       "1                0.00                饮品             鲜榨果蔬汁              0.00   \n",
       "2               22.14                饮品              现磨咖啡              4.86   \n",
       "3               19.44                饮品              现磨咖啡              7.56   \n",
       "4               14.04                饮品               瑞纳冰             12.96   \n",
       "...               ...               ...               ...               ...   \n",
       "2351850          0.00                食品              健康轻食              8.58   \n",
       "2351851         12.00                饮品              现磨咖啡             12.00   \n",
       "2351852         13.50                饮品              现磨咖啡             13.50   \n",
       "2351853         12.00                饮品              现磨咖啡             12.00   \n",
       "2351854         12.00                饮品              现磨咖啡             12.00   \n",
       "\n",
       "         pay_money  coffeestore_share_money  \n",
       "0             7.56                      0.0  \n",
       "1             0.00                      0.0  \n",
       "2             4.86                      0.0  \n",
       "3             7.56                      0.0  \n",
       "4            12.96                      0.0  \n",
       "...            ...                      ...  \n",
       "2351850       8.58                      0.0  \n",
       "2351851      12.00                      0.0  \n",
       "2351852      13.50                      0.0  \n",
       "2351853      12.00                      0.0  \n",
       "2351854      12.00                      0.0  \n",
       "\n",
       "[2351855 rows x 15 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Part 1: Explorative Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2019-01-20 to 2019-03-01\n"
     ]
    }
   ],
   "source": [
    "# 1.time span of the order data\n",
    "print (Data['dt'].min() + ' to '  + Data['dt'].max())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dt\n",
       "2019-01-20     69859\n",
       "2019-01-21    117686\n",
       "2019-01-22    118409\n",
       "2019-01-23    126331\n",
       "2019-01-24    125764\n",
       "2019-01-25    122092\n",
       "2019-01-26     77779\n",
       "2019-01-27     66399\n",
       "2019-01-28    106025\n",
       "2019-01-29    104704\n",
       "2019-01-30    101047\n",
       "2019-01-31     97701\n",
       "2019-02-01     87458\n",
       "2019-02-02     64267\n",
       "2019-02-03     43106\n",
       "2019-02-04      7113\n",
       "2019-02-05      8516\n",
       "2019-02-06      7769\n",
       "2019-02-07      7655\n",
       "2019-02-08      7822\n",
       "2019-02-09      8452\n",
       "2019-02-10      8241\n",
       "2019-02-11     40365\n",
       "2019-02-12     43334\n",
       "2019-02-13     50789\n",
       "2019-02-14     49092\n",
       "2019-02-15     49836\n",
       "2019-02-16     29672\n",
       "2019-02-17     25179\n",
       "2019-02-18     52260\n",
       "2019-02-19     51624\n",
       "2019-02-20     53121\n",
       "2019-02-21     51817\n",
       "2019-02-22     53685\n",
       "2019-02-23     31964\n",
       "2019-02-24     27414\n",
       "2019-02-25     53969\n",
       "2019-02-26     50018\n",
       "2019-02-27     48970\n",
       "2019-02-28     51272\n",
       "2019-03-01     53279\n",
       "Name: dt, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 2.number of orders each day\n",
    "Data.groupby('dt')['dt'].agg(len)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "466886"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 3.number of users\n",
    "len(Data['member_id'].value_counts(dropna=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "commodity_name\n",
       "拿铁       425514\n",
       "榛果拿铁     219627\n",
       "澳瑞白      155506\n",
       "标准美式     148666\n",
       "香草拿铁     136841\n",
       "卡布奇诺     115475\n",
       "摩卡       113754\n",
       "加浓美式     110526\n",
       "焦糖玛奇朵    105081\n",
       "焦糖拿铁      81120\n",
       "Name: dt, dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 4. top 10 commodity\n",
    "a = Data.groupby('commodity_name').count().sort_values(by='dt',ascending=False)\n",
    "b = a['dt'].head(10)\n",
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "order_num = np.array(a['dt'])[:10]\n",
    "top_names = np.array(b.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x111e755f8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 4-a. Draw the graph\n",
    "x=np.arange(10)\n",
    "plt.figure\n",
    "plt.bar(x,height=order_num,tick_label=top_names)\n",
    "for a, b in zip(x, order_num):\n",
    "    plt.text(a, b + 0.05, '%.0f' % b, ha='center', va='bottom', fontsize=8)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 5.discount rate "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
